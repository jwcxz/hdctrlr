Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
                              ../lib/usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ../lib/usbdrv/usbdrv.o
usbTxStatus1        0xc               ../lib/usbdrv/usbdrv.o
usbDeviceAddr       0x1               ../lib/usbdrv/usbdrv.o
usbRxToken          0x1               ../lib/usbdrv/usbdrv.o
usbInputBufOffset   0x1               ../lib/usbdrv/usbdrv.o
usbMsgPtr           0x2               ../lib/usbdrv/usbdrv.o
usbRxLen            0x1               ../lib/usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               ../lib/usbdrv/usbdrv.o
usbCurrentTok       0x1               ../lib/usbdrv/usbdrv.o
usbConfiguration    0x1               ../lib/usbdrv/usbdrv.o
usbRxBuf            0x16              ../lib/usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
LOAD /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/libm.a
LOAD main.o
LOAD ../uart.o
LOAD ../lib/usbdrv/usbdrv.o
LOAD ../lib/usbdrv/oddebug.o
LOAD ../lib/usbdrv/usbdrvasm.o
LOAD /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x858
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000068       0x34 main.o
                0x0000000000000068                usbDescriptorHidReport
 .progmem.data  0x000000000000009c       0x56 ../lib/usbdrv/usbdrv.o
                0x000000000000009c                usbDescriptorConfiguration
                0x00000000000000be                usbDescriptorDevice
                0x00000000000000d0                usbDescriptorStringDevice
                0x00000000000000dc                usbDescriptorStringVendor
                0x00000000000000ee                usbDescriptorString0
                0x00000000000000f2                . = ALIGN (0x2)
                0x00000000000000f2                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000f2        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000f2                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000f2                __ctors_start = .
 *(.ctors)
                0x00000000000000f2                __ctors_end = .
                0x00000000000000f2                __dtors_start = .
 *(.dtors)
                0x00000000000000f2                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000f2        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
                0x00000000000000f2                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000f2        0xc /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000fe       0x16 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
                0x00000000000000fe                __do_copy_data
 .init4         0x0000000000000114       0x10 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000114                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000124        0x8 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x000000000000012c        0x4 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
                0x000000000000012c                __vector_22
                0x000000000000012c                __vector_24
                0x000000000000012c                __vector_12
                0x000000000000012c                __bad_interrupt
                0x000000000000012c                __vector_6
                0x000000000000012c                __vector_3
                0x000000000000012c                __vector_23
                0x000000000000012c                __vector_25
                0x000000000000012c                __vector_11
                0x000000000000012c                __vector_13
                0x000000000000012c                __vector_17
                0x000000000000012c                __vector_19
                0x000000000000012c                __vector_7
                0x000000000000012c                __vector_5
                0x000000000000012c                __vector_4
                0x000000000000012c                __vector_9
                0x000000000000012c                __vector_2
                0x000000000000012c                __vector_21
                0x000000000000012c                __vector_15
                0x000000000000012c                __vector_8
                0x000000000000012c                __vector_14
                0x000000000000012c                __vector_10
                0x000000000000012c                __vector_16
                0x000000000000012c                __vector_18
                0x000000000000012c                __vector_20
 .text          0x0000000000000130       0x48 main.o
                0x0000000000000130                usbFunctionSetup
 .text          0x0000000000000178       0x76 ../uart.o
                0x0000000000000178                uart_init
                0x0000000000000198                uart_rx
                0x00000000000001a6                uart_tx
                0x00000000000001b4                uart_tx_hex
 .text          0x00000000000001ee      0x2be ../lib/usbdrv/usbdrv.o
                0x00000000000001ee                usbSetInterrupt
                0x0000000000000232                usbPoll
                0x0000000000000492                usbInit
 .text          0x00000000000004ac        0x0 ../lib/usbdrv/oddebug.o
 .text          0x00000000000004ac      0x262 ../lib/usbdrv/usbdrvasm.o
                0x00000000000004ac                usbCrc16
                0x00000000000004d6                usbCrc16Append
                0x00000000000004de                __vector_1
 .text          0x000000000000070e        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .text          0x000000000000070e        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000070e        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
                0x000000000000070e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000070e      0x146 main.o
                0x000000000000070e                main
 .text.libgcc.mul
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000854                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000854        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
                0x0000000000000854                exit
                0x0000000000000854                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000854        0x4 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000858                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000000858
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 ../uart.o
 .data          0x0000000000800100        0x2 ../lib/usbdrv/usbdrv.o
                0x0000000000800100                usbTxLen
 .data          0x0000000000800102        0x0 ../lib/usbdrv/oddebug.o
 .data          0x0000000000800102        0x0 ../lib/usbdrv/usbdrvasm.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x3c
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800102        0x5 main.o
 .bss           0x0000000000800107        0x0 ../uart.o
 .bss           0x0000000000800107        0x1 ../lib/usbdrv/usbdrv.o
 .bss           0x0000000000800108        0x0 ../lib/usbdrv/oddebug.o
 .bss           0x0000000000800108        0x0 ../lib/usbdrv/usbdrvasm.o
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800108       0x36 ../lib/usbdrv/usbdrv.o
                0x0000000000800108                usbTxBuf
                0x0000000000800113                usbTxStatus1
                0x000000000080011f                usbDeviceAddr
                0x0000000000800120                usbRxToken
                0x0000000000800121                usbInputBufOffset
                0x0000000000800122                usbMsgPtr
                0x0000000000800124                usbRxLen
                0x0000000000800125                usbNewDeviceAddr
                0x0000000000800126                usbCurrentTok
                0x0000000000800127                usbConfiguration
                0x0000000000800128                usbRxBuf
                0x000000000080013e                PROVIDE (__bss_end, .)
                0x0000000000000858                __data_load_start = LOADADDR (.data)
                0x000000000000085a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080013e        0x0
                0x000000000080013e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080013e                PROVIDE (__noinit_end, .)
                0x000000000080013e                _end = .
                0x000000000080013e                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x2da8
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o
 .stab          0x00000000000006cc      0x840 main.o
                                        0x84c (size before relaxing)
 .stab          0x0000000000000f0c      0x3cc ../uart.o
                                        0x5c4 (size before relaxing)
 .stab          0x00000000000012d8      0xa14 ../lib/usbdrv/usbdrv.o
                                        0xc54 (size before relaxing)
 .stab          0x0000000000001cec      0x168 ../lib/usbdrv/oddebug.o
                                        0x360 (size before relaxing)
 .stab          0x0000000000001e54      0xd5c ../lib/usbdrv/usbdrvasm.o
                                        0xd68 (size before relaxing)
 .stab          0x0000000000002bb0       0x6c /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000002c1c       0xd8 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000002cf4       0xb4 /usr/lib/gcc/avr/4.7.1/avr5/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000     0x10b6
 *(.stabstr)
 .stabstr       0x0000000000000000     0x10b6 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ../uart.o
 .comment       0x0000000000000000       0x12 ../lib/usbdrv/usbdrv.o
 .comment       0x0000000000000000       0x12 ../lib/usbdrv/oddebug.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(usbmouse.out elf32-avr)
LOAD linker stubs
