GAS LISTING /tmp/ccmOnL3b.s 			page 1


   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/j/projects/hdctrl/src/serialscroll/",100,0,2,.Ltext0
   8               		.stabs	"main.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  27               		.stabs	"main.h",130,0,0,0
  28               		.stabs	"/usr/lib/gcc/avr/4.7.1/../../../../avr/include/inttypes.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.7.1/include/stdint.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.7.1/../../../../avr/include/stdint.h",130,0,0,0
  31               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,121,0
  32               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,122,0
  33               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,123,0
  34               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,124,0
  35               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,125,0
  36               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,126,0
  37               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,128,0
  38               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,129,0
  39               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,142,0
  40               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,147,0
  41               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,159,0
  42               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,164,0
  43               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,169,0
  44               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,174,0
  45               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,179,0
  46               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,184,0
  47               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,192,0
  48               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,199,0
  49               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,213,0
  50               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,218,0
  51               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,223,0
  52               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,228,0
  53               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,233,0
  54               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,238,0
  55               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,246,0
  56               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,253,0
  57               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,273,0
GAS LISTING /tmp/ccmOnL3b.s 			page 2


  58               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,278,0
  59               		.stabn	162,0,0,0
  60               		.stabn	162,0,0,0
  61               		.stabs	"int_farptr_t:t(2,1)=(4,5)",128,0,77,0
  62               		.stabs	"uint_farptr_t:t(2,2)=(4,6)",128,0,81,0
  63               		.stabn	162,0,0,0
  64               		.stabs	"/usr/lib/gcc/avr/4.7.1/../../../../avr/include/avr/io.h",130,0,0,0
  65               		.stabs	"/usr/lib/gcc/avr/4.7.1/../../../../avr/include/avr/fuse.h",130,0,0,0
  66               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
  67               		.stabn	162,0,0,0
  68               		.stabn	162,0,0,0
  69               		.stabs	"/usr/lib/gcc/avr/4.7.1/../../../../avr/include/avr/pgmspace.h",130,0,0,0
  70               		.stabs	"/usr/lib/gcc/avr/4.7.1/include/stddef.h",130,0,0,0
  71               		.stabs	"size_t:t(8,1)=(0,4)",128,0,213,0
  72               		.stabn	162,0,0,0
  73               		.stabn	162,0,0,0
  74               		.stabs	"state:T(1,1)=@s8;enone:0,yellow:1,green:2,blue:3,;",128,0,0,0
  75               		.stabs	"action:T(1,2)=@s8;eidle:0,cw:1,ccw:2,;",128,0,0,0
  76               		.stabn	162,0,0,0
  77               		.section	.text.startup,"ax",@progbits
  78               		.stabs	"main:F(0,1)",36,0,12,main
  79               	.global	main
  80               		.type	main, @function
  81               	main:
  82               		.stabd	46,0,0
   1:main.c        **** // hdctrlr
   2:main.c        **** // reads back emf of a hard drive platter
   3:main.c        **** // spits out some info
   4:main.c        **** //
   5:main.c        **** // http://jwcxz.com/projects/hdctrlr
   6:main.c        **** // J. Colosimo -- http://jwcxz.com
   7:main.c        **** 
   8:main.c        **** #include "main.h"
   9:main.c        **** 
  10:main.c        **** #include "uart.h"
  11:main.c        **** 
  12:main.c        **** int main(void) {
  83               		.stabn	68,0,12,.LM0-.LFBB1
  84               	.LM0:
  85               	.LFBB1:
  86 0000 CF93      		push r28
  87 0002 DF93      		push r29
  88 0004 00D0      		rcall .
  89 0006 1F92      		push __zero_reg__
  90 0008 CDB7      		in r28,__SP_L__
  91 000a DEB7      		in r29,__SP_H__
  92               	/* prologue: function */
  93               	/* frame size = 3 */
  94               	/* stack size = 5 */
  95               	.L__stack_usage = 5
  13:main.c        ****     uint8_t i = 0;
  14:main.c        ****     uint8_t samples[3];
  15:main.c        ****     enum state last, curr;
  16:main.c        ****     enum action axn;
  17:main.c        **** 
  18:main.c        ****     // initialize UART
  19:main.c        ****     uart_init();
GAS LISTING /tmp/ccmOnL3b.s 			page 3


  96               		.stabn	68,0,19,.LM1-.LFBB1
  97               	.LM1:
  98 000c 0E94 0000 		call uart_init
  20:main.c        **** 
  21:main.c        ****     // setup ADC
  22:main.c        ****     ADMUX = _BV(ADLAR) | _BV(REFS0);
  99               		.stabn	68,0,22,.LM2-.LFBB1
 100               	.LM2:
 101 0010 80E6      		ldi r24,lo8(96)
 102 0012 8093 7C00 		sts 124,r24
  23:main.c        ****     ADCSRA = _BV(ADEN) | _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0);
 103               		.stabn	68,0,23,.LM3-.LFBB1
 104               	.LM3:
 105 0016 87E8      		ldi r24,lo8(-121)
 106 0018 8093 7A00 		sts 122,r24
  24:main.c        **** 
  25:main.c        ****     // set state information
  26:main.c        ****     axn = idle;
 107               		.stabn	68,0,26,.LM4-.LFBB1
 108               	.LM4:
 109 001c 00E0      		ldi r16,0
  27:main.c        ****     curr = none;
  28:main.c        ****     last = none;
 110               		.stabn	68,0,28,.LM5-.LFBB1
 111               	.LM5:
 112 001e 10E0      		ldi r17,0
 113               	.L43:
 114 0020 FE01      		movw r30,r28
 115 0022 3196      		adiw r30,1
  29:main.c        **** 
  30:main.c        ****     while (1) {
  31:main.c        ****         // read ADCs
  32:main.c        ****         for ( i=0 ; i<3 ; i++ ) {
 116               		.stabn	68,0,32,.LM6-.LFBB1
 117               	.LM6:
 118 0024 90E0      		ldi r25,0
 119               	.L4:
  33:main.c        ****             ADMUX = _BV(ADLAR) | _BV(REFS0) | i;
 120               		.stabn	68,0,33,.LM7-.LFBB1
 121               	.LM7:
 122 0026 892F      		mov r24,r25
 123 0028 8066      		ori r24,lo8(96)
 124 002a 8093 7C00 		sts 124,r24
  34:main.c        ****             ADCSRA |= _BV(ADSC);
 125               		.stabn	68,0,34,.LM8-.LFBB1
 126               	.LM8:
 127 002e 8091 7A00 		lds r24,122
 128 0032 8064      		ori r24,lo8(64)
 129 0034 8093 7A00 		sts 122,r24
 130               	.L3:
  35:main.c        ****             while ( !(ADCSRA & _BV(ADIF)) );
 131               		.stabn	68,0,35,.LM9-.LFBB1
 132               	.LM9:
 133 0038 8091 7A00 		lds r24,122
 134 003c 84FF      		sbrs r24,4
 135 003e 00C0      		rjmp .L3
  36:main.c        ****             ADCSRA |= _BV(ADIF);
GAS LISTING /tmp/ccmOnL3b.s 			page 4


 136               		.stabn	68,0,36,.LM10-.LFBB1
 137               	.LM10:
 138 0040 8091 7A00 		lds r24,122
 139 0044 8061      		ori r24,lo8(16)
 140 0046 8093 7A00 		sts 122,r24
  37:main.c        **** 
  38:main.c        ****             // XXX: more resolution needed later?
  39:main.c        ****             samples[i] = ADCH;
 141               		.stabn	68,0,39,.LM11-.LFBB1
 142               	.LM11:
 143 004a 8091 7900 		lds r24,121
 144 004e 8193      		st Z+,r24
  32:main.c        ****         for ( i=0 ; i<3 ; i++ ) {
 145               		.stabn	68,0,32,.LM12-.LFBB1
 146               	.LM12:
 147 0050 9F5F      		subi r25,lo8(-(1))
 148 0052 9330      		cpi r25,lo8(3)
 149 0054 01F4      		brne .L4
  40:main.c        ****         }
  41:main.c        **** 
  42:main.c        ****         // determine current position based on max value of each (and ensure
  43:main.c        ****         // that the value is above the threshold)
  44:main.c        ****         if ( samples[0] > SAMPLE_THRESH && 
 150               		.stabn	68,0,44,.LM13-.LFBB1
 151               	.LM13:
 152 0056 8981      		ldd r24,Y+1
  45:main.c        ****                 samples[0] > samples[1] && 
 153               		.stabn	68,0,45,.LM14-.LFBB1
 154               	.LM14:
 155 0058 9A81      		ldd r25,Y+2
  46:main.c        ****                 samples[0] > samples[2] ) {
 156               		.stabn	68,0,46,.LM15-.LFBB1
 157               	.LM15:
 158 005a 2B81      		ldd r18,Y+3
  44:main.c        ****         if ( samples[0] > SAMPLE_THRESH && 
 159               		.stabn	68,0,44,.LM16-.LFBB1
 160               	.LM16:
 161 005c 8131      		cpi r24,lo8(17)
 162 005e 00F0      		brlo .L6
  44:main.c        ****         if ( samples[0] > SAMPLE_THRESH && 
 163               		.stabn	68,0,44,.LM17-.LFBB1
 164               	.LM17:
 165 0060 9817      		cp r25,r24
 166 0062 00F4      		brsh .L6
  45:main.c        ****                 samples[0] > samples[1] && 
 167               		.stabn	68,0,45,.LM18-.LFBB1
 168               	.LM18:
 169 0064 2817      		cp r18,r24
 170 0066 00F4      		brsh .L6
  47:main.c        ****             curr = yellow;
 171               		.stabn	68,0,47,.LM19-.LFBB1
 172               	.LM19:
 173 0068 81E0      		ldi r24,lo8(1)
 174               	.L8:
  48:main.c        ****         } else if ( samples[1] > SAMPLE_THRESH && 
  49:main.c        ****                 samples[1] > samples[0] && 
  50:main.c        ****                 samples[1] > samples[2] ) {
GAS LISTING /tmp/ccmOnL3b.s 			page 5


  51:main.c        ****             curr = blue;
  52:main.c        ****         } else if ( samples[2] > SAMPLE_THRESH && 
  53:main.c        ****                 samples[2] > samples[0] && 
  54:main.c        ****                 samples[2] > samples[1] ) {
  55:main.c        ****             curr = green;
  56:main.c        ****         } else {
  57:main.c        ****             curr = none;
  58:main.c        ****         }
  59:main.c        ****         
  60:main.c        **** 
  61:main.c        ****         switch (last) {
 175               		.stabn	68,0,61,.LM20-.LFBB1
 176               	.LM20:
 177 006a 1230      		cpi r17,lo8(2)
 178 006c 01F0      		breq .L13
 179               	.L52:
 180 006e 1330      		cpi r17,lo8(3)
 181 0070 01F0      		breq .L14
 182 0072 1130      		cpi r17,lo8(1)
 183 0074 01F0      		breq .L50
  62:main.c        ****             case none:
  63:main.c        ****                 // no previous information known
  64:main.c        ****                 break;
  65:main.c        **** 
  66:main.c        ****             case yellow:
  67:main.c        ****                 switch (curr) {
  68:main.c        ****                     case none:
  69:main.c        ****                         axn = idle;
  70:main.c        ****                         break;
  71:main.c        ****                     case yellow:
  72:main.c        ****                         axn = idle;
  73:main.c        ****                         break;
  74:main.c        ****                     case blue:
  75:main.c        ****                         axn = cw;
  76:main.c        ****                         break;
  77:main.c        ****                     case green:
  78:main.c        ****                         axn = ccw;
  79:main.c        ****                         break;
  80:main.c        ****                 }
  81:main.c        ****                 break;
  82:main.c        **** 
  83:main.c        ****             case blue:
  84:main.c        ****                 switch (curr) {
  85:main.c        ****                     case none:
  86:main.c        ****                         axn = idle;
  87:main.c        ****                         break;
  88:main.c        ****                     case yellow:
  89:main.c        ****                         axn = ccw;
  90:main.c        ****                         break;
  91:main.c        ****                     case blue:
  92:main.c        ****                         axn = idle;
  93:main.c        ****                         break;
  94:main.c        ****                     case green:
  95:main.c        ****                         axn = cw;
  96:main.c        ****                         break;
  97:main.c        ****                 }
  98:main.c        ****                 break;
GAS LISTING /tmp/ccmOnL3b.s 			page 6


  99:main.c        **** 
 100:main.c        ****             case green:
 101:main.c        ****                 switch (curr) {
 102:main.c        ****                     case none:
 103:main.c        ****                         axn = idle;
 104:main.c        ****                         break;
 105:main.c        ****                     case yellow:
 106:main.c        ****                         axn = cw;
 107:main.c        ****                         break;
 108:main.c        ****                     case blue:
 109:main.c        ****                         axn = ccw;
 110:main.c        ****                         break;
 111:main.c        ****                     case green:
 112:main.c        ****                         axn = idle;
 113:main.c        ****                         break;
 114:main.c        ****                 }
 115:main.c        ****                 break;
 116:main.c        ****         }
 117:main.c        **** 
 118:main.c        ****         if ( last == none || curr != none ) {
 184               		.stabn	68,0,118,.LM21-.LFBB1
 185               	.LM21:
 186 0076 1111      		cpse r17,__zero_reg__
 187 0078 00C0      		rjmp .L25
 188               	.L35:
 189 007a 182F      		mov r17,r24
 119:main.c        ****             last = curr;
 120:main.c        ****         }
 121:main.c        **** 
 122:main.c        ****         if ( axn == cw ) {
 190               		.stabn	68,0,122,.LM22-.LFBB1
 191               	.LM22:
 192 007c 0130      		cpi r16,lo8(1)
 193 007e 01F0      		breq .L51
 194               	.L23:
 123:main.c        ****             uart_tx('>');
 124:main.c        ****         } else if ( axn == ccw ) {
 195               		.stabn	68,0,124,.LM23-.LFBB1
 196               	.LM23:
 197 0080 0230      		cpi r16,lo8(2)
 198 0082 01F4      		brne .L43
 125:main.c        ****             uart_tx('<');
 199               		.stabn	68,0,125,.LM24-.LFBB1
 200               	.LM24:
 201 0084 8CE3      		ldi r24,lo8(60)
 202 0086 0E94 0000 		call uart_tx
 203 008a 00C0      		rjmp .L43
 204               	.L6:
  48:main.c        ****         } else if ( samples[1] > SAMPLE_THRESH && 
 205               		.stabn	68,0,48,.LM25-.LFBB1
 206               	.LM25:
 207 008c 9131      		cpi r25,lo8(17)
 208 008e 00F0      		brlo .L9
  48:main.c        ****         } else if ( samples[1] > SAMPLE_THRESH && 
 209               		.stabn	68,0,48,.LM26-.LFBB1
 210               	.LM26:
 211 0090 8917      		cp r24,r25
GAS LISTING /tmp/ccmOnL3b.s 			page 7


 212 0092 00F4      		brsh .L9
  49:main.c        ****                 samples[1] > samples[0] && 
 213               		.stabn	68,0,49,.LM27-.LFBB1
 214               	.LM27:
 215 0094 2917      		cp r18,r25
 216 0096 00F4      		brsh .L10
  51:main.c        ****             curr = blue;
 217               		.stabn	68,0,51,.LM28-.LFBB1
 218               	.LM28:
 219 0098 83E0      		ldi r24,lo8(3)
  61:main.c        ****         switch (last) {
 220               		.stabn	68,0,61,.LM29-.LFBB1
 221               	.LM29:
 222 009a 1230      		cpi r17,lo8(2)
 223 009c 01F4      		brne .L52
 224               	.L13:
 101:main.c        ****                 switch (curr) {
 225               		.stabn	68,0,101,.LM30-.LFBB1
 226               	.LM30:
 227 009e 8130      		cpi r24,lo8(1)
 228 00a0 01F0      		breq .L20
 229 00a2 8330      		cpi r24,lo8(3)
 230 00a4 01F0      		breq .L31
 231               	.L47:
 103:main.c        ****                         axn = idle;
 232               		.stabn	68,0,103,.LM31-.LFBB1
 233               	.LM31:
 234 00a6 00E0      		ldi r16,0
 235               	.L25:
 118:main.c        ****         if ( last == none || curr != none ) {
 236               		.stabn	68,0,118,.LM32-.LFBB1
 237               	.LM32:
 238 00a8 8111      		cpse r24,__zero_reg__
 239 00aa 00C0      		rjmp .L35
 122:main.c        ****         if ( axn == cw ) {
 240               		.stabn	68,0,122,.LM33-.LFBB1
 241               	.LM33:
 242 00ac 0130      		cpi r16,lo8(1)
 243 00ae 01F4      		brne .L23
 244               	.L51:
 123:main.c        ****             uart_tx('>');
 245               		.stabn	68,0,123,.LM34-.LFBB1
 246               	.LM34:
 247 00b0 8EE3      		ldi r24,lo8(62)
 248 00b2 0E94 0000 		call uart_tx
 249 00b6 00C0      		rjmp .L43
 250               	.L9:
  52:main.c        ****         } else if ( samples[2] > SAMPLE_THRESH && 
 251               		.stabn	68,0,52,.LM35-.LFBB1
 252               	.LM35:
 253 00b8 2131      		cpi r18,lo8(17)
 254 00ba 00F4      		brsh .L10
 255               	.L30:
  57:main.c        ****             curr = none;
 256               		.stabn	68,0,57,.LM36-.LFBB1
 257               	.LM36:
 258 00bc 80E0      		ldi r24,0
GAS LISTING /tmp/ccmOnL3b.s 			page 8


 259 00be 00C0      		rjmp .L8
 260               	.L10:
  52:main.c        ****         } else if ( samples[2] > SAMPLE_THRESH && 
 261               		.stabn	68,0,52,.LM37-.LFBB1
 262               	.LM37:
 263 00c0 8217      		cp r24,r18
 264 00c2 00F4      		brsh .L30
  53:main.c        ****                 samples[2] > samples[0] && 
 265               		.stabn	68,0,53,.LM38-.LFBB1
 266               	.LM38:
 267 00c4 9217      		cp r25,r18
 268 00c6 00F4      		brsh .L30
  55:main.c        ****             curr = green;
 269               		.stabn	68,0,55,.LM39-.LFBB1
 270               	.LM39:
 271 00c8 82E0      		ldi r24,lo8(2)
 272 00ca 00C0      		rjmp .L8
 273               	.L50:
  67:main.c        ****                 switch (curr) {
 274               		.stabn	68,0,67,.LM40-.LFBB1
 275               	.LM40:
 276 00cc 8230      		cpi r24,lo8(2)
 277 00ce 01F0      		breq .L31
 278 00d0 8330      		cpi r24,lo8(3)
 279 00d2 01F4      		brne .L47
 280               	.L20:
 106:main.c        ****                         axn = cw;
 281               		.stabn	68,0,106,.LM41-.LFBB1
 282               	.LM41:
 283 00d4 01E0      		ldi r16,lo8(1)
 284 00d6 00C0      		rjmp .L35
 285               	.L14:
  84:main.c        ****                 switch (curr) {
 286               		.stabn	68,0,84,.LM42-.LFBB1
 287               	.LM42:
 288 00d8 8130      		cpi r24,lo8(1)
 289 00da 01F0      		breq .L31
 290 00dc 8230      		cpi r24,lo8(2)
 291 00de 01F0      		breq .L20
 103:main.c        ****                         axn = idle;
 292               		.stabn	68,0,103,.LM43-.LFBB1
 293               	.LM43:
 294 00e0 00E0      		ldi r16,0
 295 00e2 00C0      		rjmp .L25
 296               	.L31:
  78:main.c        ****                         axn = ccw;
 297               		.stabn	68,0,78,.LM44-.LFBB1
 298               	.LM44:
 299 00e4 02E0      		ldi r16,lo8(2)
 300 00e6 00C0      		rjmp .L35
 301               		.size	main, .-main
 302               		.stabs	"i:r(4,2)",64,0,13,25
 303               		.stabs	"samples:(0,16)=ar(0,17)=r(0,17);0;0177777;;0;2;(4,2)",128,0,14,1
 304               		.stabs	"last:r(1,1)",64,0,15,17
 305               		.stabs	"curr:r(1,1)",64,0,15,24
 306               		.stabs	"axn:r(1,2)",64,0,16,16
 307               		.stabn	192,0,0,.LFBB1-.LFBB1
GAS LISTING /tmp/ccmOnL3b.s 			page 9


 308               		.stabn	224,0,0,.Lscope1-.LFBB1
 309               	.Lscope1:
 310               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 311               		.stabd	78,0,0
 312               		.text
 313               		.stabs	"",100,0,0,.Letext0
 314               	.Letext0:
 315               		.ident	"GCC: (GNU) 4.7.1"
GAS LISTING /tmp/ccmOnL3b.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccmOnL3b.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccmOnL3b.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccmOnL3b.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccmOnL3b.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccmOnL3b.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccmOnL3b.s:81     .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
uart_init
uart_tx
